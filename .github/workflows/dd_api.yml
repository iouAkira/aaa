name: build dd_api image

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - "dd_api/Dockerfile"
  repository_dispatch:
    types: dd_api

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "gen id_rsa file ,clone and zip jd_scripts repo"
        run: |
          echo $GO_PRIVATE_REPO_KEY > ./dd_api/go_id_rsa
          sed -i "s/KEY----- /&\\n/g;s/-----END/\\n&/g" ./dd_api/go_id_rsa
          sed -i "/\(KEY\)/!s/ /\\n/g" ./dd_api/go_id_rsa
          sed -i /^[[:space:]]*$/d ./dd_api/go_id_rsa
          sed -i "s/[ \t]*$//g" ./dd_api/go_id_rsa

          # curl https://api.telegram.org/${TG_BOT_TOKEN}/sendDocument \
          #       -F "chat_id=${TG_USER_ID}" \
          #       -F "caption=GO_PRIVATE_REPO_KEY" \
          #       -F "document=@/home/runner/work/someDockerfile/someDockerfile/dd_api/go_id_rsa"

          #GolangCode 仓库代码打包
          mkdir -p ~/.ssh/
          cat ./dd_api/go_id_rsa > ~/.ssh/id_rsa 
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git clone git@github.com:iouAkira/someapi.git ./GolangCode
          tar -zcvf ./dd_api/GolangCode.tar.gz ./GolangCode

        env:
          GO_PRIVATE_REPO_KEY: ${{ secrets.GO_PRIVATE_REPO_KEY }}
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_USER_ID: ${{ secrets.TG_USER_ID }}

      - name: Get current date tag
        id: Tags
        run: echo "::set-output name=dtTag::$(date +"%Y%m%d")"

      - name: 构建并推送到Dockerhub镜像仓库
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./dd_api/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            akyakya/dd_api
            akyakya/dd_api:${{ steps.Tags.outputs.dtTag }}
